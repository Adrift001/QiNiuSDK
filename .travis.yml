# Only create a build job IF there is no tag in the commit
# if: tag IS blank
# Only create a build job IF the branch is 'master'
branches:
  only:
  - master
# Set environment variables for the build job  
env:
  global:
  - SWIFT_BRANCH=swift-5.1-branch
  - SWIFT_VERSION=swift-5.1-DEVELOPMENT-SNAPSHOT-2019-08-17-a
  # PACKAGE_VERSION will be used by travis to create the Github release tag
  #https://swift.org/builds/swift-5.1-branch/ubuntu1604/swift-5.1-DEVELOPMENT-SNAPSHOT-2019-08-17-a/swift-5.1-DEVELOPMENT-SNAPSHOT-2019-08-17-a-ubuntu16.04.tar.gz
  # - PACKAGE_VERSION=0.0.1
jobs:
  include:
  # The first stage will run all unit tests using Ubuntu
  - stage: Ubuntu Xenial 16.04
    os: linux
    language: swift
    dist: xenial
    sudo: required
    install:
    - sudo apt-get update && sudo apt-get upgrade
    - sudo apt-get install clang libicu-dev
    - mkdir swift
    - curl https://swift.org/builds/$SWIFT_BRANCH/ubuntu1604/$SWIFT_VERSION/$SWIFT_VERSION-ubuntu16.04.tar.gz
      -s | tar xz -C swift &> /dev/null
    - export PATH="$(pwd)/swift/$SWIFT_VERSION-ubuntu16.04/usr/bin:$PATH"
    script:
    - swift package update
    - swift test
  - stage: Ubuntu Bionic 18.04
    os: linux
    language: swift
    dist: bionic
    sudo: required
    install:
    - sudo apt-get update && sudo apt-get upgrade
    - sudo apt-get install clang libicu-dev
    - mkdir swift
    - curl https://swift.org/builds/$SWIFT_BRANCH/ubuntu1804/$SWIFT_VERSION/$SWIFT_VERSION-ubuntu18.04.tar.gz
      -s | tar xz -C swift &> /dev/null
    - export PATH="$(pwd)/swift/$SWIFT_VERSION-ubuntu16.04/usr/bin:$PATH"
    script:
    - swift package update
    - swift test
  # The second stage will run all tests on macOS
  - stage: macOS
    os: osx
    osx_image: xcode11
    language: swift
    sudo: required
    install:
    - wget https://swift.org/builds/$SWIFT_BRANCH/xcode/$SWIFT_VERSION/$SWIFT_VERSION-osx.pkg
    - sudo installer -pkg $SWIFT_VERSION-osx.pkg -target /
    - export PATH="/Library/Developer/Toolchains/$SWIFT_VERSION.xctoolchain/usr/bin:$PATH"
    script:
    - swift package update
    - swift test
  # The final stage will create a new Github tag using the version specified above, this will create
  # a new release in Github
  # - stage: Set tag
  #   script:
  #   - git config --global user.email "builds@travis-ci.com"
  #   - git config --global user.name "Travis CI"
  #   - git tag $PACKAGE_VERSION
  #   - git push --quiet https://$GH_TOKEN@github.com/beatsbears/Incrementer --tag > /dev/null 2>&1